<!doctype html>
<html data-wf-page="65f99dbf57aed29707f8c2c1" data-wf-site="65f316162ee81d32162229b9" lang="{{ localization.language.iso_code }}">
<head>
  <meta charset="utf-8">
  <title>{{ page_title }}</title>
  <meta content="{{ page_description }}" name="description">
  <meta content="{{ page_title }}" property="og:title">
  <meta content="{{ page_description }}" property="og:description">
  <meta content="{{ page_title }}" property="twitter:title">
  <meta content="{{ page_description }}" property="twitter:description">
  <meta property="og:type" content="website">
  <meta content="summary_large_image" name="twitter:card">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'components.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'nuchu-liquid.css' | asset_url }}" rel="stylesheet" type="text/css">

  <script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
  
  {% if settings.favicon == blank %}
    <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
  {% else %}
    <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
  {% endif %}

  {% if settings.apple_touch_icon == blank %}
    <link href="{{ 'webclip.jpg' | asset_url }}" rel="apple-touch-icon">
  {% else %}
    <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
  {% endif %}             
          
  <script defer="" src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
  
  <style>
    [x-cloak] { display: none !important}
    [li-cloak_disabled] {display: none !important}
    /* Setup Font and Background Color if Text is selected */
    ::selection {color: #fff; background:#E91B7F}
    ::-moz-selection {color: #fff; background:#E91B7F}
  </style>


  <style>
    [data-body="blue"] {
      --utility--body-fill: var(--color--blue);
      --utility--body-text: var(--color--white);
      --utility--body-button: var(--color--white);
  }
  
  [data-body="pink"] {
      --utility--body-fill: var(--color--pink-light);
      --utility--product-medium: var(--color--lilac-medium);
      --utility--product-dark: var(--color--lilac-dark);
      --utility--product-light: var(--color--lilac-light);
  }
  
  [data-body="teal"] {
      --utility--body-fill: var(--color--teal-light);
      --utility--product-medium: var(--color--teal-medium);
      --utility--product-dark: var(--color--teal-dark);
      --utility--product-light: var(--color--teal-light);
  }
  
  [data-body="yellow"] {
      --utility--body-fill: var(--color--yellow-light);
      --utility--product-medium: var(--color--yellow-medium);
      --utility--product-dark: var(--color--yellow-dark);
      --utility--product-light: var(--color--yellow-light);
  }
  </style>
  
  
  
  <script type="application/ld+json">{
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ product.title }}",
       "image": "https:{{ product.featured_image.src | img_url: '1500x1500' }}",
        "description": "{{ product.description | strip_html }}",
        "brand": "{{ product.vendor }}",
        "sku": "{{ product.selected_or_first_available_variant.sku }}",
        "offers": [
        {% for variant in product.variants %}{
          "@type": "Offer",
          "url": "{{ variant.url }}",
          "priceCurrency": "EUR",
          "price": "{{ variant.price }}",
      "priceValidUntil": "{{ 'now' | date: '%s' | plus: 31536000 | date: '%Y-%m-%d' | uri_encode | replace:'+','%20' }}",
          "availability": "{% if variant.available %}https://schema.org/InStock{% else variant.available == false %}https://schema.org/SoldOut{% endif %}",
          "itemCondition": "https://schema.org/NewCondition"
        }{% if forloop.last == false %},{% endif %}{% endfor %}
        ]
        }
    </script><script type="application/ld+json">{
         "@context": "https://schema.org",
         "@type": "BreadcrumbList",
         "itemListElement":
         [
          {
           "@type": "ListItem",
           "position": 1,
           "item":
           {
            "@id": "{{ shop.url }}",
            "name": "Home"
            }},
        {
           "@type": "ListItem",
           "position": 2,
           "item":
           {
            "@id": "{% if collection.url %}{{ collection.url }}{% else %}{{ product.vendor }}{% endif %}",
            "name": "{% if collection.url %}{{collection.title }}{% else %}{{ product.vendor }}{% endif %}"
            }},
          {
           "@type": "ListItem",
          "position": 3,
          "item":
           {
             "@id": "{{ product.url }}",
             "name": "{{ product.title }}"
           }}
         ]
        }
    </script><script type="application/ld+json">{
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [{% for fa_qs in shop.metaobjects.fa_qs.values %}{
            "@type": "Question",
            "name": "{{ fa_qs.frage }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ fa_qs.antwort | metafield_tag | strip_html }}"
            }}{% if forloop.last == false %},{% endif %}{% endfor %}
          ]
        }
    </script>
    
    <script src="{{ '_helper.js' | asset_url }}" type="text/javascript"></script>
    
    {{ content_for_header }}
</head>

<body li-page="product" data-body="{{ product.metafields.custom.theme_colour | default:'pink' }}">
  <div class="page-wrapper">
    {% render 'global_styles' %}
    {% section 'header' %}
    <div lowercase="" class="section_navbar">
      {% render 'navigation' %}
    </div>
    {{ content_for_layout }}
    {% section 'footer' %}
  </div>

<script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=65f316162ee81d32162229b9" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="{{ 'nuchu-liquid.js' | asset_url }}" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/gh/fishfinger-media/repo/lenis.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/fishfinger-media/ffsites/fishfinger.js" defer=""></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
<script src="https://nuchu.netlify.app/main.js" defer=""></script>

<script>
  const lenis = new Lenis()
  function raf(time) {
    lenis.raf(time)
    requestAnimationFrame(raf)
  }
  requestAnimationFrame(raf)
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const mobileNavLink = document.querySelector(".mobile_nav-link");
    const navMenuIcon = document.querySelector(".nav_menu-icon.is-close");
    const navMenuWrapper = document.querySelector(".nav_menu-wrapper");
    mobileNavLink.addEventListener("click", function () {
      navMenuWrapper.style.transition = "transform 0.5s ease"; // Apply transition
      navMenuWrapper.style.transform = "translateX(0)"; // Move the menu on-screen
      document.body.style.overflow = "hidden"; // Disable scrolling
    });
    navMenuIcon.addEventListener("click", function () {
      navMenuWrapper.style.transition = "transform 0.5s ease"; // Apply transition
      navMenuWrapper.style.transform = "translateX(100vw)"; // Move the menu off-screen
      document.body.style.overflow = "auto"; // Enable scrolling
    });
  });
</script>

<script>
  const faqQuestions = document.querySelectorAll(".faq_question");
  const faqAnswers = document.querySelectorAll(".faq_answer");
  const faqArrows = document.querySelectorAll(".faq_arrow");

  window.addEventListener("load", () => {
    faqAnswers.forEach(answer => answer.style.height = "0px");
  });

  function toggleFaq(index, isOpening) {
    const height = isOpening ? faqAnswers[index].scrollHeight + "px" : "0px";
    const rotateValue = isOpening ? "180deg" : "0deg";
    const scaleValue = isOpening ? "1.2" : "1";
    const heightTransition = "height 0.2s cubic-bezier(0.4, 0.0, 0.2, 1)";
    const transformTransition = "transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55)";
    faqAnswers[index].style.height = height;
    faqAnswers[index].style.transition = heightTransition;
    faqArrows[index].style.transition = transformTransition;
    faqArrows[index].style.transform = `rotate(${rotateValue}) scale(${scaleValue})`;
    if (isOpening) {
      setTimeout(() => faqArrows[index].style.transform = `rotate(${rotateValue})`, 200);
    }
  }
  faqQuestions.forEach((question, index) => {
    question.addEventListener("click", () => {
      const isOpening = faqAnswers[index].style.height === "0px";
      toggleFaq(index, isOpening);
    });
  });
</script>

<script src="{{ 'locale.js' | asset_url }}" type="text/javascript"></script>  
    
<script>
  document.querySelectorAll(".product-main_slider-container").forEach(function (container) {
    const thumbsSwiper = new Swiper(container.querySelector(".swiper.is-productthumbnail"), {
      slidesPerView: "auto",
      rewind: false,
      loopedSlides: 8,
      slideToClickedSlide: true,
      spaceBetween: 16,
    });
    const swiper = new Swiper(container.querySelector(".swiper.is-productmain"), {
      mousewheel: {
        forceToAxis: true
      },
      thumbs: {
        swiper: thumbsSwiper,
        slideThumbActiveClass: "is-active",
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      },
      navigation: {
        nextEl: container.querySelector(".swiper-next"),
        prevEl: container.querySelector(".swiper-prev"),
      }
    });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const ingredientBtn = document.querySelector('[ingredient-btn]');
    const mainTableWrapper = document.querySelector('.product-main_table-wrapper');
    const ingredientIcon = document.getElementById('ingredient-icon');
    ingredientBtn.addEventListener('click', function () {
      if (mainTableWrapper.style.maxHeight === '80rem' || !mainTableWrapper.style.maxHeight) {
        mainTableWrapper.style.maxHeight = '7rem';
        ingredientIcon.style.transform = 'rotate(0deg)';
      } else {
        mainTableWrapper.style.maxHeight = '80rem';
        ingredientIcon.style.transform = 'rotate(180deg)';
      }
    });
  });
</script>

<script>
  function runScriptBelow991px() {
    const productHeading = document.querySelectorAll(".product-detail_title");
    const productAnswers = document.querySelectorAll(".product-detail_answer");
    const productArrows = document.querySelectorAll(".product-item_icon");
    window.addEventListener("load", () => {
      productAnswers.forEach(answer => answer.style.height = "0px");
    });

    function toggleFaq(index, isOpening) {
      const height = isOpening ? productAnswers[index].scrollHeight + "px" : "0px";
      const rotateValue = isOpening ? "180deg" : "0deg";
      const scaleValue = isOpening ? "1.2" : "1";
      const heightTransition = "height 0.2s cubic-bezier(0.4, 0.0, 0.2, 1)";
      const transformTransition = "transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55)";
      productAnswers[index].style.height = height;
      productAnswers[index].style.transition = heightTransition;
      productArrows[index].style.transition = transformTransition;
      productArrows[index].style.transform = `rotate(${rotateValue}) scale(${scaleValue})`;
      if (isOpening) {
        setTimeout(() => productArrows[index].style.transform = `rotate(${rotateValue})`, 200);
      }
    }
    productHeading.forEach((question, index) => {
      question.addEventListener("click", () => {
        const isOpening = productAnswers[index].style.height === "0px";
        toggleFaq(index, isOpening);
      });
    });
  }
  const mediaQuery = window.matchMedia('(max-width: 991px)');
  // Initial check
  if (mediaQuery.matches) {
    runScriptBelow991px();
  }
  // Listen for changes in screen size
  mediaQuery.addListener(function (mediaQueryList) {
    if (mediaQueryList.matches) {
      runScriptBelow991px();
    }
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get all elements with attribute is-add-to-cart
    const addToCartElements = document.querySelectorAll('[is-add-to-cart]');
    // Loop through each element and add click event listener
    addToCartElements.forEach(function (element) {
      element.addEventListener('click', function () {
        // Simulate click on element with attribute li-element="add-to-cart"
        const addToCartButton = document.querySelector('[li-element="add-to-cart"]');
        if (addToCartButton) {
          addToCartButton.click(); // Trigger click event
        } else {
          console.error('Add to cart button not found');
        }
      });
    });
  });
</script>


<script>document.addEventListener('DOMContentLoaded', function() {
    // Select all anchor links
    var anchorLinks = document.querySelectorAll('a[href^="#"]');
    // Iterate over each anchor link
    anchorLinks.forEach(function(anchorLink) {
        // Add click event listener
        anchorLink.addEventListener('click', function(event) {
            // Check if the href attribute contains "#hitters"
            if (this.getAttribute('href') === '#hitters') {
                event.preventDefault(); // Prevent default behavior (scrolling to the anchor)
                // Find the element with attribute link="hitters" and trigger a click event on it
                var elementToClick = document.querySelector('[link="hitters"]');
                if (elementToClick) {
                    elementToClick.click();
                }}
        });
    });
});
</script>

</body>
</html>